// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hta_backend_2/models"
)

// PutSingleChoiceIDOKCode is the HTTP code returned for type PutSingleChoiceIDOK
const PutSingleChoiceIDOKCode int = 200

/*
PutSingleChoiceIDOK OK

swagger:response putSingleChoiceIdOK
*/
type PutSingleChoiceIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.CategorySingleChoice `json:"body,omitempty"`
}

// NewPutSingleChoiceIDOK creates PutSingleChoiceIDOK with default headers values
func NewPutSingleChoiceIDOK() *PutSingleChoiceIDOK {

	return &PutSingleChoiceIDOK{}
}

// WithPayload adds the payload to the put single choice Id o k response
func (o *PutSingleChoiceIDOK) WithPayload(payload *models.CategorySingleChoice) *PutSingleChoiceIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put single choice Id o k response
func (o *PutSingleChoiceIDOK) SetPayload(payload *models.CategorySingleChoice) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSingleChoiceIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutSingleChoiceIDDefault Error

swagger:response putSingleChoiceIdDefault
*/
type PutSingleChoiceIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutSingleChoiceIDDefault creates PutSingleChoiceIDDefault with default headers values
func NewPutSingleChoiceIDDefault(code int) *PutSingleChoiceIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutSingleChoiceIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put single choice ID default response
func (o *PutSingleChoiceIDDefault) WithStatusCode(code int) *PutSingleChoiceIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put single choice ID default response
func (o *PutSingleChoiceIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put single choice ID default response
func (o *PutSingleChoiceIDDefault) WithPayload(payload *models.Error) *PutSingleChoiceIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put single choice ID default response
func (o *PutSingleChoiceIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSingleChoiceIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
