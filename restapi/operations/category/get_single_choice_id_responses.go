// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pl33/hta-backend/models"
)

// GetSingleChoiceIDOKCode is the HTTP code returned for type GetSingleChoiceIDOK
const GetSingleChoiceIDOKCode int = 200

/*
GetSingleChoiceIDOK OK

swagger:response getSingleChoiceIdOK
*/
type GetSingleChoiceIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.CategorySingleChoice `json:"body,omitempty"`
}

// NewGetSingleChoiceIDOK creates GetSingleChoiceIDOK with default headers values
func NewGetSingleChoiceIDOK() *GetSingleChoiceIDOK {

	return &GetSingleChoiceIDOK{}
}

// WithPayload adds the payload to the get single choice Id o k response
func (o *GetSingleChoiceIDOK) WithPayload(payload *models.CategorySingleChoice) *GetSingleChoiceIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single choice Id o k response
func (o *GetSingleChoiceIDOK) SetPayload(payload *models.CategorySingleChoice) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleChoiceIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetSingleChoiceIDDefault Error

swagger:response getSingleChoiceIdDefault
*/
type GetSingleChoiceIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSingleChoiceIDDefault creates GetSingleChoiceIDDefault with default headers values
func NewGetSingleChoiceIDDefault(code int) *GetSingleChoiceIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSingleChoiceIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get single choice ID default response
func (o *GetSingleChoiceIDDefault) WithStatusCode(code int) *GetSingleChoiceIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get single choice ID default response
func (o *GetSingleChoiceIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get single choice ID default response
func (o *GetSingleChoiceIDDefault) WithPayload(payload *models.Error) *GetSingleChoiceIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single choice ID default response
func (o *GetSingleChoiceIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleChoiceIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
