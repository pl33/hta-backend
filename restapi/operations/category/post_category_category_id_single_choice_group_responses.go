// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hta_backend_2/models"
)

// PostCategoryCategoryIDSingleChoiceGroupCreatedCode is the HTTP code returned for type PostCategoryCategoryIDSingleChoiceGroupCreated
const PostCategoryCategoryIDSingleChoiceGroupCreatedCode int = 201

/*
PostCategoryCategoryIDSingleChoiceGroupCreated Created

swagger:response postCategoryCategoryIdSingleChoiceGroupCreated
*/
type PostCategoryCategoryIDSingleChoiceGroupCreated struct {

	/*
	  In: Body
	*/
	Payload *models.CategorySingleChoiceGroup `json:"body,omitempty"`
}

// NewPostCategoryCategoryIDSingleChoiceGroupCreated creates PostCategoryCategoryIDSingleChoiceGroupCreated with default headers values
func NewPostCategoryCategoryIDSingleChoiceGroupCreated() *PostCategoryCategoryIDSingleChoiceGroupCreated {

	return &PostCategoryCategoryIDSingleChoiceGroupCreated{}
}

// WithPayload adds the payload to the post category category Id single choice group created response
func (o *PostCategoryCategoryIDSingleChoiceGroupCreated) WithPayload(payload *models.CategorySingleChoiceGroup) *PostCategoryCategoryIDSingleChoiceGroupCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post category category Id single choice group created response
func (o *PostCategoryCategoryIDSingleChoiceGroupCreated) SetPayload(payload *models.CategorySingleChoiceGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCategoryCategoryIDSingleChoiceGroupCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostCategoryCategoryIDSingleChoiceGroupDefault Error

swagger:response postCategoryCategoryIdSingleChoiceGroupDefault
*/
type PostCategoryCategoryIDSingleChoiceGroupDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCategoryCategoryIDSingleChoiceGroupDefault creates PostCategoryCategoryIDSingleChoiceGroupDefault with default headers values
func NewPostCategoryCategoryIDSingleChoiceGroupDefault(code int) *PostCategoryCategoryIDSingleChoiceGroupDefault {
	if code <= 0 {
		code = 500
	}

	return &PostCategoryCategoryIDSingleChoiceGroupDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post category category ID single choice group default response
func (o *PostCategoryCategoryIDSingleChoiceGroupDefault) WithStatusCode(code int) *PostCategoryCategoryIDSingleChoiceGroupDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post category category ID single choice group default response
func (o *PostCategoryCategoryIDSingleChoiceGroupDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post category category ID single choice group default response
func (o *PostCategoryCategoryIDSingleChoiceGroupDefault) WithPayload(payload *models.Error) *PostCategoryCategoryIDSingleChoiceGroupDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post category category ID single choice group default response
func (o *PostCategoryCategoryIDSingleChoiceGroupDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCategoryCategoryIDSingleChoiceGroupDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
