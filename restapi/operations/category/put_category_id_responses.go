// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hta_backend_2/models"
)

// PutCategoryIDOKCode is the HTTP code returned for type PutCategoryIDOK
const PutCategoryIDOKCode int = 200

/*
PutCategoryIDOK OK

swagger:response putCategoryIdOK
*/
type PutCategoryIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Category `json:"body,omitempty"`
}

// NewPutCategoryIDOK creates PutCategoryIDOK with default headers values
func NewPutCategoryIDOK() *PutCategoryIDOK {

	return &PutCategoryIDOK{}
}

// WithPayload adds the payload to the put category Id o k response
func (o *PutCategoryIDOK) WithPayload(payload *models.Category) *PutCategoryIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put category Id o k response
func (o *PutCategoryIDOK) SetPayload(payload *models.Category) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCategoryIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutCategoryIDDefault Error

swagger:response putCategoryIdDefault
*/
type PutCategoryIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutCategoryIDDefault creates PutCategoryIDDefault with default headers values
func NewPutCategoryIDDefault(code int) *PutCategoryIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutCategoryIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put category ID default response
func (o *PutCategoryIDDefault) WithStatusCode(code int) *PutCategoryIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put category ID default response
func (o *PutCategoryIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put category ID default response
func (o *PutCategoryIDDefault) WithPayload(payload *models.Error) *PutCategoryIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put category ID default response
func (o *PutCategoryIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCategoryIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
