// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hta_backend_2/models"
)

// GetOidcInfoOKCode is the HTTP code returned for type GetOidcInfoOK
const GetOidcInfoOKCode int = 200

/*
GetOidcInfoOK OpenID Connect information

swagger:response getOidcInfoOK
*/
type GetOidcInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.OidcInfo `json:"body,omitempty"`
}

// NewGetOidcInfoOK creates GetOidcInfoOK with default headers values
func NewGetOidcInfoOK() *GetOidcInfoOK {

	return &GetOidcInfoOK{}
}

// WithPayload adds the payload to the get oidc info o k response
func (o *GetOidcInfoOK) WithPayload(payload *models.OidcInfo) *GetOidcInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oidc info o k response
func (o *GetOidcInfoOK) SetPayload(payload *models.OidcInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOidcInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetOidcInfoDefault error

swagger:response getOidcInfoDefault
*/
type GetOidcInfoDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOidcInfoDefault creates GetOidcInfoDefault with default headers values
func NewGetOidcInfoDefault(code int) *GetOidcInfoDefault {
	if code <= 0 {
		code = 500
	}

	return &GetOidcInfoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get oidc info default response
func (o *GetOidcInfoDefault) WithStatusCode(code int) *GetOidcInfoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get oidc info default response
func (o *GetOidcInfoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get oidc info default response
func (o *GetOidcInfoDefault) WithPayload(payload *models.Error) *GetOidcInfoDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oidc info default response
func (o *GetOidcInfoDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOidcInfoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
